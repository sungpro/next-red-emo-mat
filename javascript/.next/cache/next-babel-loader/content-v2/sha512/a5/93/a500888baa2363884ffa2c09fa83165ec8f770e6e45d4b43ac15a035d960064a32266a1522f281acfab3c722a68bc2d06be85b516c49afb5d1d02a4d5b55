{"ast":null,"code":"var _jsxFileName = \"/home/sung/dev/next-red-emo/src/pages/_document.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nclass MyDocument extends Document {\n  render() {\n    return ___EmotionJSX(Html, {\n      lang: \"en\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 4\n      }\n    }, ___EmotionJSX(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    }), ___EmotionJSX(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }, ___EmotionJSX(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 6\n      }\n    }), ___EmotionJSX(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nMyDocument.getInitialProps = async ctx => {\n  // * Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n  // Render app and page and get the context of the page with collected side effects\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => props => sheets.collect(___EmotionJSX(App, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 51\n      }\n    })))\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread(_objectSpread({}, initialProps), {}, {\n    // Styles fragment is rendered after the app and page rendering finish\n    styles: [___EmotionJSX(React.Fragment, null, initialProps.styles, sheets.getStyleElement())]\n  });\n};\n\nexport default MyDocument;","map":{"version":3,"sources":["/home/sung/dev/next-red-emo/src/pages/_document.jsx"],"names":["React","Document","Html","Head","Main","NextScript","ServerStyleSheets","MyDocument","render","getInitialProps","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","styles","getStyleElement"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IACCC,IADD,EAECC,IAFD,EAGCC,IAHD,EAICC,UAJD,QAKO,eALP;AAOA,SAASC,iBAAT,QAAkC,0BAAlC;;;AAEA,MAAMC,UAAN,SAAyBN,QAAzB,CAAkC;AACjCO,EAAAA,MAAM,GAAG;AACR,WACC,cAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,cAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,cAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,cAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CAFD,CADD;AASA;;AAXgC;;AAclCD,UAAU,CAACE,eAAX,GAA6B,MAAOC,GAAP,IAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAMC,MAAM,GAAG,IAAIL,iBAAJ,EAAf;AACA,QAAMM,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEAH,EAAAA,GAAG,CAACG,UAAJ,GAAiB,MAChBD,kBAAkB,CAAC;AAClBE,IAAAA,UAAU,EAAGC,GAAD,IAAUC,KAAD,IAAWL,MAAM,CAACM,OAAP,CAAe,cAAC,GAAD,eAASD,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAf;AADd,GAAD,CADnB;;AAKA,QAAME,YAAY,GAAG,MAAMjB,QAAQ,CAACQ,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,yCACIQ,YADJ;AAEC;AACAC,IAAAA,MAAM,EAAE,CACP,oCACED,YAAY,CAACC,MADf,EAEER,MAAM,CAACS,eAAP,EAFF,CADO;AAHT;AAUA,CA5CD;;AA8CA,eAAeb,UAAf","sourcesContent":["import React from 'react';\nimport Document, {\n\tHtml,\n\tHead,\n\tMain,\n\tNextScript\n} from 'next/document';\n\nimport { ServerStyleSheets } from '@material-ui/core/styles';\n\nclass MyDocument extends Document {\n\trender() {\n\t\treturn (\n\t\t\t<Html lang=\"en\">\n\t\t\t\t<Head />\n\t\t\t\t<body>\n\t\t\t\t\t<Main />\n\t\t\t\t\t<NextScript />\n\t\t\t\t</body>\n\t\t\t</Html>\n\t\t);\n\t}\n}\n\nMyDocument.getInitialProps = async (ctx) => {\n\t// * Resolution order\n\t//\n\t// On the server:\n\t// 1. app.getInitialProps\n\t// 2. page.getInitialProps\n\t// 3. document.getInitialProps\n\t// 4. app.render\n\t// 5. page.render\n\t// 6. document.render\n\t//\n\t// On the server with error:\n\t// 1. document.getInitialProps\n\t// 2. app.render\n\t// 3. page.render\n\t// 4. document.render\n\t//\n\t// On the client\n\t// 1. app.getInitialProps\n\t// 2. page.getInitialProps\n\t// 3. app.render\n\t// 4. page.render\n\n\t// Render app and page and get the context of the page with collected side effects\n\tconst sheets = new ServerStyleSheets();\n\tconst originalRenderPage = ctx.renderPage;\n\n\tctx.renderPage = () =>\n\t\toriginalRenderPage({\n\t\t\tenhanceApp: (App) => (props) => sheets.collect(<App {...props} />)\n\t\t});\n\n\tconst initialProps = await Document.getInitialProps(ctx);\n\n\treturn {\n\t\t...initialProps,\n\t\t// Styles fragment is rendered after the app and page rendering finish\n\t\tstyles: [\n\t\t\t<>\n\t\t\t\t{initialProps.styles}\n\t\t\t\t{sheets.getStyleElement()}\n\t\t\t</>\n\t\t]\n\t};\n};\n\nexport default MyDocument;\n"]},"metadata":{},"sourceType":"module"}