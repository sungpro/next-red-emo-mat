{"ast":null,"code":"var _jsxFileName = \"/home/sung/dev/next-red-emo/src/components/Header/Header.jsx\";\nimport React from 'react';\nimport { AppBar, Toolbar, Button } from '@material-ui/core';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { setTheme } from 'lib/redux/modules/theme';\nimport { useTheme } from '@emotion/react';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nconst Header = () => {\n  const eTheme = useTheme();\n  const dispatch = useDispatch();\n  const {\n    theme\n  } = useSelector(state => ({\n    theme: state.theme\n  }), shallowEqual);\n\n  const onClickTheme = targetTheme => {\n    if (targetTheme == null) return;\n    dispatch(setTheme(targetTheme));\n  };\n\n  return ___EmotionJSX(\"div\", {\n    css: eTheme.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(AppBar, {\n    position: \"static\",\n    color: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"NEXT-RED-EMO-MAT\", ___EmotionJSX(Button, {\n    active: theme.theme === 'light',\n    disabled: theme.theme === 'light',\n    onClick: () => onClickTheme('light'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"LIGHT\"), ___EmotionJSX(Button, {\n    onClick: () => onClickTheme('dark'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"DARK\"), ___EmotionJSX(Button, {\n    onClick: () => onClickTheme('teal'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"TEAL\"))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/home/sung/dev/next-red-emo/src/components/Header/Header.jsx"],"names":["React","AppBar","Toolbar","Button","useSelector","useDispatch","shallowEqual","setTheme","useTheme","Header","eTheme","dispatch","theme","state","onClickTheme","targetTheme","header"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,QAAwC,mBAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,aAAvD;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACpB,QAAMC,MAAM,GAAGF,QAAQ,EAAvB;AACC,QAAMG,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAYR,WAAW,CAC1BS,KAAD,KAAY;AACVD,IAAAA,KAAK,EAAEC,KAAK,CAACD;AADH,GAAZ,CAD2B,EAI3BN,YAJ2B,CAA7B;;AAOA,QAAMQ,YAAY,GAAIC,WAAD,IAAiB;AACpC,QAAIA,WAAW,IAAI,IAAnB,EAAyB;AACzBJ,IAAAA,QAAQ,CAACJ,QAAQ,CAACQ,WAAD,CAAT,CAAR;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,GAAG,EAAEL,MAAM,CAACM,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,KAAK,EAAC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE,cAAC,MAAD;AACE,IAAA,MAAM,EAAEJ,KAAK,CAACA,KAAN,KAAgB,OAD1B;AAEE,IAAA,QAAQ,EAAEA,KAAK,CAACA,KAAN,KAAgB,OAF5B;AAGE,IAAA,OAAO,EAAE,MAAME,YAAY,CAAC,OAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAQE,cAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,MAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EAWE,cAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,MAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,CADF,CADF,CADF;AAqBD,CArCD;;AAuCA,eAAeL,MAAf","sourcesContent":["import React from 'react'\r\nimport { AppBar, Toolbar, Button } from '@material-ui/core';\r\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\r\nimport { setTheme } from 'lib/redux/modules/theme';\r\nimport { useTheme } from '@emotion/react';\r\n\r\nconst Header = () => {\r\n\tconst eTheme = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  const { theme } = useSelector(\r\n    (state) => ({\r\n      theme: state.theme\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const onClickTheme = (targetTheme) => {\r\n    if (targetTheme == null) return;\r\n    dispatch(setTheme(targetTheme))\r\n  }\r\n\r\n  return (\r\n    <div css={eTheme.header}>\r\n      <AppBar position=\"static\" color=\"transparent\">\r\n        <Toolbar>\r\n          NEXT-RED-EMO-MAT\r\n          <Button\r\n            active={theme.theme === 'light'}\r\n            disabled={theme.theme === 'light'}\r\n            onClick={() => onClickTheme('light')}>\r\n            LIGHT\r\n          </Button>\r\n          <Button onClick={() => onClickTheme('dark')}>\r\n            DARK\r\n          </Button>\r\n          <Button onClick={() => onClickTheme('teal')}>\r\n            TEAL\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header"]},"metadata":{},"sourceType":"module"}