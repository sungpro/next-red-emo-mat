{"ast":null,"code":"var _jsxFileName = \"/home/sung/dev/next-red-emo/src/components/Header/Header.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { AppBar, Toolbar, Button } from '@material-ui/core';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { setTheme } from 'lib/redux/modules/theme';\nimport { useTheme } from '@emotion/react';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\n\nvar Header = function Header() {\n  _s();\n\n  var eTheme = useTheme();\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return {\n      theme: state.theme\n    };\n  }, shallowEqual),\n      theme = _useSelector.theme;\n\n  var onClickTheme = function onClickTheme(targetTheme) {\n    if (targetTheme == null) return;\n    dispatch(setTheme(targetTheme));\n  };\n\n  return ___EmotionJSX(\"div\", {\n    css: eTheme.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(AppBar, {\n    position: \"static\",\n    color: \"transparent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(Toolbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, ___EmotionJSX(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"NEXT-RED-EMO-MAT\"), ___EmotionJSX(Button, {\n    css: eTheme.headerButton,\n    disabled: theme.theme === 'light',\n    onClick: function onClick() {\n      return onClickTheme('light');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"LIGHT\"), ___EmotionJSX(Button, {\n    css: eTheme.headerButton,\n    disabled: theme.theme === 'dark',\n    onClick: function onClick() {\n      return onClickTheme('dark');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"DARK\"), ___EmotionJSX(Button, {\n    css: eTheme.headerButton,\n    disabled: theme.theme === 'teal',\n    onClick: function onClick() {\n      return onClickTheme('teal');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"TEAL\"))));\n};\n\n_s(Header, \"TZC3uNyMy4tdaeKtQkhDOEJX21E=\", false, function () {\n  return [useTheme, useDispatch, useSelector];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/sung/dev/next-red-emo/src/components/Header/Header.jsx"],"names":["React","AppBar","Toolbar","Button","useSelector","useDispatch","shallowEqual","setTheme","useTheme","Header","eTheme","dispatch","state","theme","onClickTheme","targetTheme","header","headerButton"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,QAAwC,mBAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,aAAvD;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AACpB,MAAMC,MAAM,GAAGF,QAAQ,EAAvB;AACC,MAAMG,QAAQ,GAAGN,WAAW,EAA5B;;AAFmB,qBAIDD,WAAW,CAC3B,UAACQ,KAAD;AAAA,WAAY;AACVC,MAAAA,KAAK,EAAED,KAAK,CAACC;AADH,KAAZ;AAAA,GAD2B,EAI3BP,YAJ2B,CAJV;AAAA,MAIXO,KAJW,gBAIXA,KAJW;;AAWnB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,WAAD,EAAiB;AACpC,QAAIA,WAAW,IAAI,IAAnB,EAAyB;AACzBJ,IAAAA,QAAQ,CAACJ,QAAQ,CAACQ,WAAD,CAAT,CAAR;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,GAAG,EAAEL,MAAM,CAACM,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,KAAK,EAAC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAIE,cAAC,MAAD;AACE,IAAA,GAAG,EAAEN,MAAM,CAACO,YADd;AAEE,IAAA,QAAQ,EAAEJ,KAAK,CAACA,KAAN,KAAgB,OAF5B;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,CAAC,OAAD,CAAlB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAUE,cAAC,MAAD;AACE,IAAA,GAAG,EAAEJ,MAAM,CAACO,YADd;AAEE,IAAA,QAAQ,EAAEJ,KAAK,CAACA,KAAN,KAAgB,MAF5B;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,CAAC,MAAD,CAAlB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,EAgBE,cAAC,MAAD;AACE,IAAA,GAAG,EAAEJ,MAAM,CAACO,YADd;AAEE,IAAA,QAAQ,EAAEJ,KAAK,CAACA,KAAN,KAAgB,MAF5B;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,CAAC,MAAD,CAAlB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,CADF,CADF,CADF;AA6BD,CA7CD;;GAAML,M;UACUD,Q,EACGH,W,EAECD,W;;;KAJdK,M;AA+CN,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\nimport { AppBar, Toolbar, Button } from '@material-ui/core';\r\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\r\nimport { setTheme } from 'lib/redux/modules/theme';\r\nimport { useTheme } from '@emotion/react';\r\n\r\nconst Header = () => {\r\n\tconst eTheme = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  const { theme } = useSelector(\r\n    (state) => ({\r\n      theme: state.theme\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const onClickTheme = (targetTheme) => {\r\n    if (targetTheme == null) return;\r\n    dispatch(setTheme(targetTheme))\r\n  }\r\n\r\n  return (\r\n    <div css={eTheme.header}>\r\n      <AppBar position=\"static\" color=\"transparent\">\r\n        <Toolbar>\r\n          <span>\r\n            NEXT-RED-EMO-MAT\r\n          </span>\r\n          <Button\r\n            css={eTheme.headerButton}\r\n            disabled={theme.theme === 'light'}\r\n            onClick={() => onClickTheme('light')}>\r\n            LIGHT\r\n          </Button>\r\n          <Button\r\n            css={eTheme.headerButton}\r\n            disabled={theme.theme === 'dark'}\r\n            onClick={() => onClickTheme('dark')}>\r\n            DARK\r\n          </Button>\r\n          <Button\r\n            css={eTheme.headerButton}\r\n            disabled={theme.theme === 'teal'}\r\n            onClick={() => onClickTheme('teal')}>\r\n            TEAL\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header"]},"metadata":{},"sourceType":"module"}